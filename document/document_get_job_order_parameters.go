// Code generated by go-swagger; DO NOT EDIT.

package document

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDocumentGetJobOrderParams creates a new DocumentGetJobOrderParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDocumentGetJobOrderParams() *DocumentGetJobOrderParams {
	return &DocumentGetJobOrderParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDocumentGetJobOrderParamsWithTimeout creates a new DocumentGetJobOrderParams object
// with the ability to set a timeout on a request.
func NewDocumentGetJobOrderParamsWithTimeout(timeout time.Duration) *DocumentGetJobOrderParams {
	return &DocumentGetJobOrderParams{
		timeout: timeout,
	}
}

// NewDocumentGetJobOrderParamsWithContext creates a new DocumentGetJobOrderParams object
// with the ability to set a context for a request.
func NewDocumentGetJobOrderParamsWithContext(ctx context.Context) *DocumentGetJobOrderParams {
	return &DocumentGetJobOrderParams{
		Context: ctx,
	}
}

// NewDocumentGetJobOrderParamsWithHTTPClient creates a new DocumentGetJobOrderParams object
// with the ability to set a custom HTTPClient for a request.
func NewDocumentGetJobOrderParamsWithHTTPClient(client *http.Client) *DocumentGetJobOrderParams {
	return &DocumentGetJobOrderParams{
		HTTPClient: client,
	}
}

/* DocumentGetJobOrderParams contains all the parameters to send to the API endpoint
   for the document get job order operation.

   Typically these are written to a http.Request.
*/
type DocumentGetJobOrderParams struct {

	/* SovrenAccountID.

	   Provided Account Id
	*/
	SovrenAccountID string

	/* SovrenServiceKey.

	   Provided Service Key
	*/
	SovrenServiceKey string

	// DocumentID.
	DocumentID string

	// IndexID.
	IndexID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the document get job order params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DocumentGetJobOrderParams) WithDefaults() *DocumentGetJobOrderParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the document get job order params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DocumentGetJobOrderParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the document get job order params
func (o *DocumentGetJobOrderParams) WithTimeout(timeout time.Duration) *DocumentGetJobOrderParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the document get job order params
func (o *DocumentGetJobOrderParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the document get job order params
func (o *DocumentGetJobOrderParams) WithContext(ctx context.Context) *DocumentGetJobOrderParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the document get job order params
func (o *DocumentGetJobOrderParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the document get job order params
func (o *DocumentGetJobOrderParams) WithHTTPClient(client *http.Client) *DocumentGetJobOrderParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the document get job order params
func (o *DocumentGetJobOrderParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSovrenAccountID adds the sovrenAccountID to the document get job order params
func (o *DocumentGetJobOrderParams) WithSovrenAccountID(sovrenAccountID string) *DocumentGetJobOrderParams {
	o.SetSovrenAccountID(sovrenAccountID)
	return o
}

// SetSovrenAccountID adds the sovrenAccountId to the document get job order params
func (o *DocumentGetJobOrderParams) SetSovrenAccountID(sovrenAccountID string) {
	o.SovrenAccountID = sovrenAccountID
}

// WithSovrenServiceKey adds the sovrenServiceKey to the document get job order params
func (o *DocumentGetJobOrderParams) WithSovrenServiceKey(sovrenServiceKey string) *DocumentGetJobOrderParams {
	o.SetSovrenServiceKey(sovrenServiceKey)
	return o
}

// SetSovrenServiceKey adds the sovrenServiceKey to the document get job order params
func (o *DocumentGetJobOrderParams) SetSovrenServiceKey(sovrenServiceKey string) {
	o.SovrenServiceKey = sovrenServiceKey
}

// WithDocumentID adds the documentID to the document get job order params
func (o *DocumentGetJobOrderParams) WithDocumentID(documentID string) *DocumentGetJobOrderParams {
	o.SetDocumentID(documentID)
	return o
}

// SetDocumentID adds the documentId to the document get job order params
func (o *DocumentGetJobOrderParams) SetDocumentID(documentID string) {
	o.DocumentID = documentID
}

// WithIndexID adds the indexID to the document get job order params
func (o *DocumentGetJobOrderParams) WithIndexID(indexID string) *DocumentGetJobOrderParams {
	o.SetIndexID(indexID)
	return o
}

// SetIndexID adds the indexId to the document get job order params
func (o *DocumentGetJobOrderParams) SetIndexID(indexID string) {
	o.IndexID = indexID
}

// WriteToRequest writes these params to a swagger request
func (o *DocumentGetJobOrderParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Sovren-AccountId
	if err := r.SetHeaderParam("Sovren-AccountId", o.SovrenAccountID); err != nil {
		return err
	}

	// header param Sovren-ServiceKey
	if err := r.SetHeaderParam("Sovren-ServiceKey", o.SovrenServiceKey); err != nil {
		return err
	}

	// path param documentId
	if err := r.SetPathParam("documentId", o.DocumentID); err != nil {
		return err
	}

	// path param indexId
	if err := r.SetPathParam("indexId", o.IndexID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
