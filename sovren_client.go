// Code generated by go-swagger; DO NOT EDIT.

package go_sovren_client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/teamjobot/go_sovren_client/account"
	"github.com/teamjobot/go_sovren_client/document"
	"github.com/teamjobot/go_sovren_client/geocode_and_index"
	"github.com/teamjobot/go_sovren_client/geocoder"
	"github.com/teamjobot/go_sovren_client/index"
	"github.com/teamjobot/go_sovren_client/matcher"
	"github.com/teamjobot/go_sovren_client/normalizations"
	"github.com/teamjobot/go_sovren_client/parser"
	"github.com/teamjobot/go_sovren_client/scorer"
	"github.com/teamjobot/go_sovren_client/searcher"
	"github.com/teamjobot/go_sovren_client/skills"
)

// Default sovren HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "rest.resumeparsing.com"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new sovren HTTP client.
func NewHTTPClient(formats strfmt.Registry) *Sovren {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new sovren HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *Sovren {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new sovren client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Sovren {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(Sovren)
	cli.Transport = transport
	cli.Account = account.New(transport, formats)
	cli.Document = document.New(transport, formats)
	cli.GeocodeAndIndex = geocode_and_index.New(transport, formats)
	cli.Geocoder = geocoder.New(transport, formats)
	cli.Index = index.New(transport, formats)
	cli.Matcher = matcher.New(transport, formats)
	cli.Normalizations = normalizations.New(transport, formats)
	cli.Parser = parser.New(transport, formats)
	cli.Scorer = scorer.New(transport, formats)
	cli.Searcher = searcher.New(transport, formats)
	cli.Skills = skills.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// Sovren is a client for sovren
type Sovren struct {
	Account account.ClientService

	Document document.ClientService

	GeocodeAndIndex geocode_and_index.ClientService

	Geocoder geocoder.ClientService

	Index index.ClientService

	Matcher matcher.ClientService

	Normalizations normalizations.ClientService

	Parser parser.ClientService

	Scorer scorer.ClientService

	Searcher searcher.ClientService

	Skills skills.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *Sovren) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.Account.SetTransport(transport)
	c.Document.SetTransport(transport)
	c.GeocodeAndIndex.SetTransport(transport)
	c.Geocoder.SetTransport(transport)
	c.Index.SetTransport(transport)
	c.Matcher.SetTransport(transport)
	c.Normalizations.SetTransport(transport)
	c.Parser.SetTransport(transport)
	c.Scorer.SetTransport(transport)
	c.Searcher.SetTransport(transport)
	c.Skills.SetTransport(transport)
}
